name: Build & Verify Pipeline

on:
  push:
    branches: [ master ]
    paths-ignore:
      - "**.MD"
      - ".gitignore"
  pull_request:
    paths-ignore:
      - "**.MD"
      - ".gitignore"

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write
  pull-requests: read
  checks: write

env:
  GO_VERSION: "1.25.0"
  REGISTRY: ghcr.io

jobs:
  # Static analysis and code quality check
  verify:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
          check-latest: true

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4
          args: --timeout=2m
          only-new-issues: true
          install-mode: binary
          skip-cache: false

      - name: Check formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "The following files are not formatted properly:"
            gofmt -l .
            exit 1
          fi

  # Run unit and integration tests with code coverage
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: verify
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.txt
          flags: unittests
          fail_ci_if_error: false

  # Simple build verification (for PRs and non-main branches)
  build:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [ verify ]
    # Only run for PRs or pushes to non-main branches
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref != 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Build
        run: go build -v ./... 